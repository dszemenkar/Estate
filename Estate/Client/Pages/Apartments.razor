@page "/apartments"
@inject IApartmentService ApartmentService
@inject IToastService ToastService
@inject NavigationManager NavigationManager
@attribute [Authorize]

<h3>Lägenheter</h3>

<div style="margin: 20px;">
    <NavLink href="@($"apartment/create")" class="btn btn-primary"> Lägg till lägenhet </NavLink>
</div>

@if (ApartmentService.Apartments == null)
{
    <span>Hämtar lägenheter..</span>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Namn</th>
                <th>Nummer</th>
                <th>Kvadratmeter</th>
                <th>Våning</th>
                <th>Pris</th>
                <th>Tillgänglig</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var entry in ApartmentService.Apartments)
            {
            <tr class="@BusinessProperty(entry)">
                <td>@entry.Title</td>
                <td>@entry.Number</td>

                <td>@entry.SqMeters</td>
                <td>@entry.Floor</td>
                <td>@entry.Price</td>

                @if (entry.IsAvailable)
                {
                    <td>Ja</td>
                }
                else
                {
                    <td>Nej</td>
                }
                <td><NavLink href="@($"apartment/edit/{entry.Id}")" class="btn btn-dark"> Ändra/Lägg till hyresgäst </NavLink></td>
                <td><button class="btn btn-danger" @onclick="@(() => ShowModalView(entry))">Radera</button></td>
            </tr>
            }
        </tbody>
    </table>

    @if (ShowModal)
    {
        <div class="modal fade show d-block" id="exampleModal" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="titleLabel">Radera</h5>
                        <button type="button" class="close" @onclick="@Close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>Är du säker på att du vill radera? Lägenheten kommer försvinna helt!</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" @onclick="@(() => Delete(Selected.Id))">Radera</button>
                        <button type="button" class="btn btn-secondary" @onclick="@Close">Avbryt</button>
                    </div>
                </div>
            </div>
        </div>
    }

}

@code {
    bool ShowModal { get; set; } = false;
    Apartment Selected { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await ApartmentService.GetApartments();
    }

    string BusinessProperty(Apartment apartment)
    {
        if (apartment.BusinessProperty)
            return "table-primary";
        else
            return string.Empty;
    }

    private void Close()
    {
        ShowModal = false;
    }

    private void ShowModalView(Apartment apartment)
    {
        Selected = apartment;
        ShowModal = true;
    }


    private async void Delete(int id)
    {
        await ApartmentService.DeleteApartment(id);
        Close();
        UpdateView();
    }

    private async void UpdateView()
    {
        await ApartmentService.GetApartments();
        this.StateHasChanged();
    }
}
